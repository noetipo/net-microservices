version: '3.4'

services:
########################################################## microservices.demo.product.api ################################################################################
  microservices.demo.product.api:
    image: ${DOCKER_REGISTRY-}microservicesdemoproductapi
    environment:      
      - ASPNETCORE_URLS=http://::80
    ports:
      - 8084:80
    build:
      context: .
      dockerfile: app/Domain/Microservices.Demo.Product.API/Dockerfile
    networks:
      - backend
    restart: on-failure
########################################################## microservices.demo.policy.api #################################################################################
  microservices.demo.policy.api:
    image: ${DOCKER_REGISTRY-}microservicesdemopolicyapi
    cpus: 0.25
    environment:      
      - ASPNETCORE_URLS=http://::80
    ports:
      - 8083:80      
    build:
      context: .
      dockerfile: app/Domain/Microservices.Demo.Policy.API/Dockerfile
    networks:
      - backend
    restart: on-failure
########################################################## microservices.demo.product.api ################################################################################
  microservices.demo.report.api:
    image: ${DOCKER_REGISTRY-}microservicesdemoproductapi
    environment:      
      - ASPNETCORE_URLS=http://::80
    ports:
      - 8082:80
    build:
      context: .
      dockerfile: app/Domain/Microservices.Demo.Report.API/Dockerfile
    networks:
      - backend
    restart: on-failure
########################################################## Angular Client ################################################################################
  # microservices.demo.client.web:
  #   container_name: microservices.demo.client.web
  #   image: microservices.demo.client.web
  #   build:
  #     context: app/Client/microservices.demo.client.web
  #     dockerfile: Dockerfile    
  #   ports:
  #     - 8081:80      
  #   networks:
  #     - backend   
########################################################## networks #######################################################################################################
networks:
  backend:
    name: backend
    driver: bridge